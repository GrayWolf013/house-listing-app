{"ast":null,"code":"import { createStore } from 'vuex';\n// import state from './state'\n// import * as actions from './actions'\n// import * as mutations from './mutations'\n// import * as getters from './getters'\n\n// const store = createStore({\n//   state,\n//   actions,\n//   mutations,\n//   getters,\n// })\n\n// export default store\n\n// import Vue from 'vue';\n// import Vuex from \"vuex\";\nimport Api from \"@/api/client\";\n\n// Vue.use(Vuex);\n\n// eslint-disable-next-line\nexport default createStore({\n  state: {\n    apiBaseUrl: \"https://api.intern.d-tt.nl/api\",\n    // authenticatedUser: null,\n    houses: []\n  },\n  mutations: {\n    /**\n     * Updates a specific property in the store\n     * @param {object} state The store's state\n     * @param {object} data An object containing the property and value\n     */\n    updateProperty: (state, data) => {\n      console.log(data);\n      console.log(data.value);\n      state[data.property] = data.value;\n      console.log(\"state[data.property]\");\n      console.log(state[data.property]);\n      console.log(\"state[data.property]\");\n    }\n  },\n  actions: {\n    getHouses: context => {\n      Api.get(\"/houses\")\n      // .then((response) => response.json())\n      // .then((response) => console.log(response))\n      .then(data => context.commit('updateProperty', {\n        property: 'houses',\n        value: data\n      }))\n      // .then(data => {\n      //   context.commit('updateProperty', { property: 'houses', value: data })\n      //   Promise.resolve(data)\n      // })\n      // // eslint-disable-next-line\n      .catch(error => console.error(error));\n\n      // .then(response => Promise.resolve(response.json()))\n      // .catch(error => Promise.reject(error));\n    }\n\n    // usersCreate: (context, data) => {\n    //   Api.post('/users', data)\n    //     .then(response => context.commit('updateProperty', { property: 'authenticatedUser', value: response.body }))\n    //     // eslint-disable-next-line\n    //     .catch(error => console.error(error));\n    // },\n  }\n});","map":{"version":3,"names":["createStore","Api","state","apiBaseUrl","houses","mutations","updateProperty","data","console","log","value","property","actions","getHouses","context","get","then","commit","catch","error"],"sources":["/Users/frostmoon/Documents/DTT projects/Vue js/front-end-assessment/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n// import state from './state'\n// import * as actions from './actions'\n// import * as mutations from './mutations'\n// import * as getters from './getters'\n\n// const store = createStore({\n//   state,\n//   actions,\n//   mutations,\n//   getters,\n// })\n\n// export default store\n\n// import Vue from 'vue';\n// import Vuex from \"vuex\";\nimport Api from \"@/api/client\";\n\n// Vue.use(Vuex);\n\n// eslint-disable-next-line\nexport default createStore({\n  state: {\n    apiBaseUrl: \"https://api.intern.d-tt.nl/api\",\n    // authenticatedUser: null,\n    houses: [],\n  },\n\n  mutations: {\n    /**\n     * Updates a specific property in the store\n     * @param {object} state The store's state\n     * @param {object} data An object containing the property and value\n     */\n    updateProperty: (state, data) => {\n      console.log(data)\n      console.log(data.value)\n\n      state[data.property] = data.value;\n      \n      console.log(\"state[data.property]\")\n      console.log(state[data.property])\n      console.log(\"state[data.property]\")\n\n\n    },\n  },\n\n  actions: {\n    getHouses: (context) => {\n      Api.get(\"/houses\")\n        // .then((response) => response.json())\n        // .then((response) => console.log(response))\n\n        .then(data => context.commit('updateProperty', { property: 'houses', value: data }))\n        // .then(data => {\n        //   context.commit('updateProperty', { property: 'houses', value: data })\n        //   Promise.resolve(data)\n        // })\n        // // eslint-disable-next-line\n        .catch((error) => console.error(error))\n\n\n        // .then(response => Promise.resolve(response.json()))\n        // .catch(error => Promise.reject(error));\n    },\n\n    // usersCreate: (context, data) => {\n    //   Api.post('/users', data)\n    //     .then(response => context.commit('updateProperty', { property: 'authenticatedUser', value: response.body }))\n    //     // eslint-disable-next-line\n    //     .catch(error => console.error(error));\n    // },\n  },\n});\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAOC,GAAG,MAAM,cAAc;;AAE9B;;AAEA;AACA,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE;IACLC,UAAU,EAAE,gCAAgC;IAC5C;IACAC,MAAM,EAAE;EACV,CAAC;EAEDC,SAAS,EAAE;IACT;AACJ;AACA;AACA;AACA;IACIC,cAAc,EAAE,CAACJ,KAAK,EAAEK,IAAI,KAAK;MAC/BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,KAAK,CAAC;MAEvBR,KAAK,CAACK,IAAI,CAACI,QAAQ,CAAC,GAAGJ,IAAI,CAACG,KAAK;MAEjCF,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnCD,OAAO,CAACC,GAAG,CAACP,KAAK,CAACK,IAAI,CAACI,QAAQ,CAAC,CAAC;MACjCH,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IAGrC;EACF,CAAC;EAEDG,OAAO,EAAE;IACPC,SAAS,EAAGC,OAAO,IAAK;MACtBb,GAAG,CAACc,GAAG,CAAC,SAAS;MACf;MACA;MAAA,CAECC,IAAI,CAACT,IAAI,IAAIO,OAAO,CAACG,MAAM,CAAC,gBAAgB,EAAE;QAAEN,QAAQ,EAAE,QAAQ;QAAED,KAAK,EAAEH;MAAK,CAAC,CAAC;MACnF;MACA;MACA;MACA;MACA;MAAA,CACCW,KAAK,CAAEC,KAAK,IAAKX,OAAO,CAACW,KAAK,CAACA,KAAK,CAAC,CAAC;;MAGvC;MACA;IACJ;;IAEA;IACA;IACA;IACA;IACA;IACA;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}