{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HelloWorld = _resolveComponent(\"HelloWorld\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.store.state.houses ? (_openBlock(), _createBlock(_component_HelloWorld, {\n    key: 0,\n    housesprop: $setup.store.state.houses\n  }, null, 8 /* PROPS */, [\"housesprop\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAM;;;uBAAjBC,oBAEM,OAFNC,UAEM,GADcC,YAAK,CAACC,KAAK,CAACC,MAAM,kBAApCC,aAAyEC;;IAAlCC,UAAU,EAAEL,YAAK,CAACC,KAAK,CAACC","names":["class","_createElementBlock","_hoisted_1","$setup","state","houses","_createBlock","_component_HelloWorld","housesprop"],"sourceRoot":"","sources":["/Users/frostmoon/Documents/DTT projects/Vue js/house-listing-app/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <HelloWorld v-if=\"store.state.houses\" :housesprop=\"store.state.houses\" />\n  </div>\n</template>\n\n<script>\nimport { reactive, toRefs, onMounted,  } from 'vue'\nimport { ref } from 'vue';\nimport HelloWorld from '@/components/HelloWorld.vue'\nimport { useStore } from 'vuex'\n\nexport default {\n  name: 'HomeView',\n  setup() {\n    // const store = useStore()\n\n    const state = reactive({\n      houses: ref([]),\n    })\n\n    // const movies = ref([]);\n\n    const store = useStore()\n\n    // const homes = computed(() => store.state.homes | [])\n    // const homes = ref([]);\n\n    // const users = computed(() => store.state.users | [])\n\n    onMounted(async () => {\n      console.log(\"store\")\n      console.log(store)\n\n      console.log(\"store\")\n      store.dispatch('getHouses').then(() => {\n        // API success\n        console.log(\"data fetched\")\n      })\n      .catch(() => {\n        // API fail\n        console.log(\"error in request\")\n      })     \n    });\n\n    return {\n      ...toRefs(state),\n      store\n    }\n  },\n  components: {\n    HelloWorld\n  }\n}\n\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}