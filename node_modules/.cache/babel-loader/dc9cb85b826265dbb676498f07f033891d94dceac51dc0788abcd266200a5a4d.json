{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createVNode as _createVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HouseContent = _resolveComponent(\"HouseContent\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [$setup.houses ? (_openBlock(), _createBlock(_component_HouseContent, {\n    key: 0,\n    housesprop: $setup.houses,\n    onSearch: $setup.search,\n    onSortBy: $setup.sortBy\n  }, null, 8 /* PROPS */, [\"housesprop\", \"onSearch\", \"onSortBy\"])) : _createCommentVNode(\"v-if\", true)]), _createVNode(_component_router_view)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAM;;;;6DAAjBC,oBAOM,OAPNC,UAOM,GALIC,aAAM,kBADdC,aAKEC;;IAHCC,UAAU,EAAEH,aAAM;IAClBI,QAAM,EAAEJ,aAAM;IACdK,QAAM,EAAEL;0GAGbM,aAAeC","names":["class","_createElementVNode","_hoisted_1","$setup","_createBlock","_component_HouseContent","housesprop","onSearch","onSortBy","_createVNode","_component_router_view"],"sourceRoot":"","sources":["/Users/frostmoon/Documents/DTT projects/Vue js/house-listing-app/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <HouseContent\n      v-if=\"houses\"\n      :housesprop=\"houses\"\n      @search=\"search\"\n      @sortBy=\"sortBy\"\n    />\n  </div>\n  <router-view />\n\n</template>\n\n<script>\nimport { reactive, toRefs, onMounted, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport HouseContent from \"@/components/HouseContentComponent.vue\";\n\nexport default {\n  name: \"HomeView\",\n  setup() {\n    const state = reactive({\n      searchText: \"\",\n      sortByPrice: true,\n    });\n\n    const store = useStore();\n\n    function search(searchText) {\n      state.searchText = searchText;\n    }\n\n    function sortBy(price) {\n      state.sortByPrice = price;\n    }\n\n    const houses = computed(() => {\n      if (state.searchText) {\n        return store.getters.search(state.searchText);\n      }\n      return store.getters.sortBy(state.sortByPrice);\n    });\n\n    onMounted(async () => {\n      store\n        .dispatch(\"getHouses\")\n        .then(() => {\n          // API success\n          console.log(\"data fetched\");\n        })\n        .catch(() => {\n          // API fail\n          console.log(\"error in request\");\n        });\n    });\n\n    return {\n      ...toRefs(state),\n      houses,\n      search,\n      sortBy,\n    };\n  },\n  components: {\n    HouseContent,\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}