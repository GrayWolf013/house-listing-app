{"ast":null,"code":"import { reactive, toRefs, computed, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\nimport UploadImageComponent from \"./UploadImageComponent.vue\";\nexport default {\n  name: \"HouseListingForm\",\n  props: {\n    houseId: {\n      type: String,\n      required: false\n    }\n  },\n  setup(props, context) {\n    const store = useStore();\n    const state = reactive({\n      house: {},\n      buttonClicked: false,\n      errorMessage: \"\"\n    });\n    const submitButtonDisabled = computed(() => {\n      return !house.value.streetName || !house.value.houseNumber || !house.value.zip || !house.value.city || !house.value.price || !house.value.size || !house.value.bedrooms || !house.value.bathrooms || !house.value.constructionYear || !house.value.description || !house.value.hasGarage;\n    });\n    function selectImage(data) {\n      context.emit(\"selectImage\", {\n        image: data.image,\n        previewImage: data.previewImage\n      });\n    }\n    function isYearFormat(inputNumber) {\n      // Convert inputNumber to a string\n      var inputString = inputNumber.toString();\n\n      // Check if inputString is a valid year format 'yyyy'\n      var yearRegex = /^\\d{4}$/;\n      if (!yearRegex.test(inputString)) {\n        return false;\n      }\n\n      // Check if input year is not before the current year\n      var inputYear = parseInt(inputString);\n      var currentYear = new Date().getFullYear();\n      if (!(inputYear < currentYear)) {\n        return false;\n      }\n      return true;\n    }\n    function formInvalid() {\n      // Check if any required fields are empty\n      if (!house.value.streetName || !house.value.houseNumber || !house.value.zip || !house.value.city || !house.value.price || !house.value.size || !house.value.bedrooms || !house.value.bathrooms || !house.value.constructionYear || !house.value.description || !house.value.hasGarage) {\n        state.errorMessage = \"Please fill out all required fields.\";\n        return true;\n      }\n      if (!isYearFormat(house.value.constructionYear)) {\n        state.errorMessage = \"Please enter valid construction year.\";\n        return true;\n      }\n      return false;\n    }\n    function submitButtonClicked() {\n      state.buttonClicked = true;\n      if (!formInvalid()) context.emit(\"submitForm\", house);\n    }\n    onMounted(async () => {\n      if (props && props.houseId) {\n        state.house = store.getters.getByIdEditModel(props.houseId);\n      }\n    });\n    return {\n      ...toRefs(state),\n      submitButtonDisabled,\n      selectImage,\n      submitButtonClicked\n    };\n  },\n  components: {\n    UploadImageComponent\n  }\n};","map":{"version":3,"mappings":"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","names":["reactive","toRefs","computed","onMounted","useStore","UploadImageComponent","name","props","houseId","type","String","required","setup","context","store","state","house","buttonClicked","errorMessage","submitButtonDisabled","value","streetName","houseNumber","zip","city","price","size","bedrooms","bathrooms","constructionYear","description","hasGarage","selectImage","data","emit","image","previewImage","isYearFormat","inputNumber","inputString","toString","yearRegex","test","inputYear","parseInt","currentYear","Date","getFullYear","formInvalid","submitButtonClicked","getters","getByIdEditModel","components"],"sourceRoot":"","sources":["/Users/frostmoon/Documents/DTT projects/Vue js/house-listing-app/src/components/HouseListingFormComponent.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"\">\n    <div class=\"input-field-title\">Street name*</div>\n    <input\n      type=\"text\"\n      placeholder=\"Enter the street name\"\n      v-model=\"house.streetName\"\n      :class=\"{ error: !house.streetName && buttonClicked }\"\n    />\n    <div class=\"flex\">\n      <div>\n        <div class=\"input-field-title\">House number*</div>\n        <input\n          type=\"number\"\n          placeholder=\"Enter the house number\"\n          v-model=\"house.houseNumber\"\n          :class=\"{ error: !house.houseNumber && buttonClicked }\"\n        />\n      </div>\n      <div class=\"spacer\" />\n      <div>\n        <div class=\"input-field-title\">Addition (optional)</div>\n        <input\n          type=\"number\"\n          placeholder=\"e.g. A\"\n          v-model=\"house.numberAddition\"\n        />\n      </div>\n    </div>\n    <div class=\"input-field-title\">Postal Code*</div>\n    <input\n      type=\"text\"\n      placeholder=\"e.g. 1000 AA\"\n      v-model=\"house.zip\"\n      :class=\"{ error: !house.zip && buttonClicked }\"\n    />\n    <div class=\"input-field-title\">City*</div>\n    <input\n      type=\"text\"\n      placeholder=\"e.g. Utrecht\"\n      v-model=\"house.city\"\n      :class=\"{ error: !house.city && buttonClicked }\"\n    />\n    <div class=\"input-field-title\">Upload picture (PNG or JPG)*</div>\n    <UploadImageComponent\n      :houseImage=\"house.image\"\n      @selectImage=\"selectImage\"\n    />\n\n    <div class=\"input-field-title\">Price*</div>\n    <input\n      type=\"number\"\n      placeholder=\"e.g. €150.000\"\n      v-model=\"house.price\"\n      :class=\"{ error: !house.price && buttonClicked }\"\n    />\n    <div class=\"flex\">\n      <div>\n        <div class=\"input-field-title\">Size*</div>\n        <input\n          type=\"number\"\n          placeholder=\"e.g. 60m²\"\n          v-model=\"house.size\"\n          :class=\"{ error: !house.size && buttonClicked }\"\n        />\n      </div>\n      <div class=\"spacer\" />\n      <div>\n        <div class=\"input-field-title\">Garage*</div>\n        <select\n          v-model=\"house.hasGarage\"\n          :class=\"{ error: !house.hasGarage && buttonClicked }\"\n        >\n          <option disabled value=\"\">Please select an option</option>\n          <option value=\"false\">no</option>\n          <option value=\"true\">yes</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"flex\">\n      <div>\n        <div class=\"input-field-title\">Bedrooms*</div>\n        <input\n          type=\"number\"\n          placeholder=\"Enter amount\"\n          v-model=\"house.bedrooms\"\n          :class=\"{ error: !house.bedrooms && buttonClicked }\"\n        />\n      </div>\n      <div class=\"spacer\" />\n      <div>\n        <div class=\"input-field-title\">Bathrooms*</div>\n        <input\n          type=\"number\"\n          placeholder=\"Enter amount\"\n          v-model=\"house.bathrooms\"\n          :class=\"{ error: !house.bathrooms && buttonClicked }\"\n        />\n      </div>\n    </div>\n    <div class=\"input-field-title\">Construction date*</div>\n    <input\n      type=\"number\"\n      placeholder=\"e.g. 1900\"\n      v-model=\"house.constructionYear\"\n      :class=\"{ error: !house.constructionYear && buttonClicked }\"\n    />\n    <div class=\"input-field-title\">Description*</div>\n    <textarea\n      cols=\"30\"\n      rows=\"10\"\n      placeholder=\"Enter description\"\n      v-model=\"house.description\"\n      :class=\"{ error: !house.description && buttonClicked }\"\n    />\n    <div class=\"error-label\">\n      {{ errorMessage }}\n    </div>\n    <div class=\"btn-container\">\n      <button\n        class=\"btn\"\n        @click=\"submitButtonClicked\"\n        :disabled=\"submitButtonDisabled\"\n        :class=\"{ error: submitButtonDisabled }\"\n      >\n        POST\n      </button>\n    </div>\n  </form>\n</template>\n\n<script>\nimport { reactive, toRefs, computed, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\nimport UploadImageComponent from \"./UploadImageComponent.vue\";\n\nexport default {\n  name: \"HouseListingForm\",\n  props: {\n    houseId: {\n      type: String,\n      required: false,\n    },\n  },\n  setup(props, context) {\n    const store = useStore();\n    const state = reactive({\n      house: {},\n      buttonClicked: false,\n      errorMessage: \"\",\n    });\n\n    const submitButtonDisabled = computed(() => {\n      return (\n        !house.value.streetName ||\n        !house.value.houseNumber ||\n        !house.value.zip ||\n        !house.value.city ||\n        !house.value.price ||\n        !house.value.size ||\n        !house.value.bedrooms ||\n        !house.value.bathrooms ||\n        !house.value.constructionYear ||\n        !house.value.description ||\n        !house.value.hasGarage\n      );\n    });\n\n    function selectImage(data) {\n      context.emit(\"selectImage\", {\n        image: data.image,\n        previewImage: data.previewImage,\n      });\n    }\n\n    function isYearFormat(inputNumber) {\n      // Convert inputNumber to a string\n      var inputString = inputNumber.toString();\n\n      // Check if inputString is a valid year format 'yyyy'\n      var yearRegex = /^\\d{4}$/;\n      if (!yearRegex.test(inputString)) {\n        return false;\n      }\n\n      // Check if input year is not before the current year\n      var inputYear = parseInt(inputString);\n      var currentYear = new Date().getFullYear();\n      if (!(inputYear < currentYear)) {\n        return false;\n      }\n\n      return true;\n    }\n\n    function formInvalid() {\n      // Check if any required fields are empty\n      if (\n        !house.value.streetName ||\n        !house.value.houseNumber ||\n        !house.value.zip ||\n        !house.value.city ||\n        !house.value.price ||\n        !house.value.size ||\n        !house.value.bedrooms ||\n        !house.value.bathrooms ||\n        !house.value.constructionYear ||\n        !house.value.description ||\n        !house.value.hasGarage\n      ) {\n        state.errorMessage = \"Please fill out all required fields.\";\n        return true;\n      }\n\n      if (!isYearFormat(house.value.constructionYear)) {\n        state.errorMessage = \"Please enter valid construction year.\";\n        return true;\n      }\n\n      return false;\n    }\n\n    function submitButtonClicked() {\n      state.buttonClicked = true;\n      if (!formInvalid()) context.emit(\"submitForm\", house);\n    }\n\n    onMounted(async () => {\n      if (props && props.houseId) {\n         state.house = store.getters.getByIdEditModel(props.houseId);\n      }\n    });\n\n    return {\n      ...toRefs(state),\n      submitButtonDisabled,\n\n      selectImage,\n      submitButtonClicked,\n    };\n  },\n  components: { UploadImageComponent },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.flex {\n  display: flex;\n}\n.input-field-title {\n  margin: 10px 0;\n}\n.spacer {\n  width: 20px;\n}\n.btn-container {\n  margin: 50px 275px;\n}\n.error {\n  border: 1px solid #f00 !important;\n\n  &::placeholder {\n    color: red;\n    opacity: 1; /* Firefox */\n  }\n\n  &:-ms-input-placeholder {\n    /* Internet Explorer 10-11 */\n    color: red;\n  }\n\n  &::-ms-input-placeholder {\n    /* Microsoft Edge */\n    color: red;\n  }\n}\n.error-label {\n  color: red;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}