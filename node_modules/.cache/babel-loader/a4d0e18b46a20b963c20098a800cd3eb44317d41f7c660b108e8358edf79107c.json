{"ast":null,"code":"const apiKey = \"PBknlDMOSUux9sEyo0ivKtma64f13FVR\";\nconst headers = {\n  \"Content-Type\": \"application/json\",\n  \"X-Api-Key\": apiKey\n};\nconst baseUrl = \"https://api.intern.d-tt.nl/api\";\nexport default {\n  get(url) {\n    return fetch(baseUrl + url, {\n      headers\n    }).then(response => Promise.resolve(response.json())).catch(error => Promise.reject(error));\n  },\n  post(url, body) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: headers,\n      body: JSON.stringify(body)\n    };\n    return fetch(baseUrl + url, requestOptions).then(response => Promise.resolve(response)).catch(error => Promise.reject(error));\n  },\n  edit(url, data) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: headers,\n      body: JSON.stringify(data.body)\n    };\n    const requestUrl = `${baseUrl}${url}/${data.id}`;\n    return fetch(requestUrl, requestOptions).then(response => Promise.resolve(response)).catch(error => Promise.reject(error));\n  },\n  delete(url, id) {\n    const requestOptions = {\n      method: \"DELETE\",\n      headers: headers\n    };\n    const requestUrl = `${baseUrl}${url}/${id}`;\n    return fetch(requestUrl, requestOptions).then(response => Promise.resolve(response)).catch(error => Promise.reject(error));\n  },\n  upload(url, data) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"X-Api-Key\": apiKey\n      },\n      body: data.body\n    };\n    const requestUrl = `${baseUrl}${url}/${data.id}/upload`;\n    return fetch(requestUrl, requestOptions).then(response => Promise.resolve(response)).catch(error => Promise.reject(error));\n  }\n};","map":{"version":3,"names":["apiKey","headers","baseUrl","get","url","fetch","then","response","Promise","resolve","json","catch","error","reject","post","body","requestOptions","method","JSON","stringify","edit","data","requestUrl","id","delete","upload"],"sources":["/Users/frostmoon/Documents/DTT projects/Vue js/house-listing-app/src/api/client.js"],"sourcesContent":["const apiKey = \"PBknlDMOSUux9sEyo0ivKtma64f13FVR\";\nconst headers = {\n  \"Content-Type\": \"application/json\",\n  \"X-Api-Key\": apiKey,\n};\nconst baseUrl = \"https://api.intern.d-tt.nl/api\";\n\nexport default {\n  get(url) {\n    return fetch(baseUrl + url, { headers })\n      .then((response) => Promise.resolve(response.json()))\n      .catch((error) => Promise.reject(error));\n  },\n\n  post(url, body) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: headers,\n      body: JSON.stringify(body),\n    };\n    return fetch(baseUrl + url, requestOptions)\n      .then((response) => Promise.resolve(response))\n      .catch((error) => Promise.reject(error));\n  },\n\n  edit(url, data) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: headers,\n      body: JSON.stringify(data.body),\n    };\n    const requestUrl = `${baseUrl}${url}/${data.id}`;\n    return fetch(requestUrl, requestOptions)\n      .then((response) => Promise.resolve(response))\n      .catch((error) => Promise.reject(error));\n  },\n\n  delete(url, id) {\n    const requestOptions = {\n      method: \"DELETE\",\n      headers: headers,\n    };\n    const requestUrl = `${baseUrl}${url}/${id}`;\n    return fetch(requestUrl, requestOptions)\n      .then((response) => Promise.resolve(response))\n      .catch((error) => Promise.reject(error));\n  },\n\n  upload(url, data) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"X-Api-Key\": apiKey,\n      },\n      body: data.body,\n    };\n    const requestUrl = `${baseUrl}${url}/${data.id}/upload`;\n    return fetch(requestUrl, requestOptions)\n      .then((response) => Promise.resolve(response))\n      .catch((error) => Promise.reject(error));\n  },\n};\n"],"mappings":"AAAA,MAAMA,MAAM,GAAG,kCAAkC;AACjD,MAAMC,OAAO,GAAG;EACd,cAAc,EAAE,kBAAkB;EAClC,WAAW,EAAED;AACf,CAAC;AACD,MAAME,OAAO,GAAG,gCAAgC;AAEhD,eAAe;EACbC,GAAG,CAACC,GAAG,EAAE;IACP,OAAOC,KAAK,CAACH,OAAO,GAAGE,GAAG,EAAE;MAAEH;IAAQ,CAAC,CAAC,CACrCK,IAAI,CAAEC,QAAQ,IAAKC,OAAO,CAACC,OAAO,CAACF,QAAQ,CAACG,IAAI,EAAE,CAAC,CAAC,CACpDC,KAAK,CAAEC,KAAK,IAAKJ,OAAO,CAACK,MAAM,CAACD,KAAK,CAAC,CAAC;EAC5C,CAAC;EAEDE,IAAI,CAACV,GAAG,EAAEW,IAAI,EAAE;IACd,MAAMC,cAAc,GAAG;MACrBC,MAAM,EAAE,MAAM;MACdhB,OAAO,EAAEA,OAAO;MAChBc,IAAI,EAAEG,IAAI,CAACC,SAAS,CAACJ,IAAI;IAC3B,CAAC;IACD,OAAOV,KAAK,CAACH,OAAO,GAAGE,GAAG,EAAEY,cAAc,CAAC,CACxCV,IAAI,CAAEC,QAAQ,IAAKC,OAAO,CAACC,OAAO,CAACF,QAAQ,CAAC,CAAC,CAC7CI,KAAK,CAAEC,KAAK,IAAKJ,OAAO,CAACK,MAAM,CAACD,KAAK,CAAC,CAAC;EAC5C,CAAC;EAEDQ,IAAI,CAAChB,GAAG,EAAEiB,IAAI,EAAE;IACd,MAAML,cAAc,GAAG;MACrBC,MAAM,EAAE,MAAM;MACdhB,OAAO,EAAEA,OAAO;MAChBc,IAAI,EAAEG,IAAI,CAACC,SAAS,CAACE,IAAI,CAACN,IAAI;IAChC,CAAC;IACD,MAAMO,UAAU,GAAI,GAAEpB,OAAQ,GAAEE,GAAI,IAAGiB,IAAI,CAACE,EAAG,EAAC;IAChD,OAAOlB,KAAK,CAACiB,UAAU,EAAEN,cAAc,CAAC,CACrCV,IAAI,CAAEC,QAAQ,IAAKC,OAAO,CAACC,OAAO,CAACF,QAAQ,CAAC,CAAC,CAC7CI,KAAK,CAAEC,KAAK,IAAKJ,OAAO,CAACK,MAAM,CAACD,KAAK,CAAC,CAAC;EAC5C,CAAC;EAEDY,MAAM,CAACpB,GAAG,EAAEmB,EAAE,EAAE;IACd,MAAMP,cAAc,GAAG;MACrBC,MAAM,EAAE,QAAQ;MAChBhB,OAAO,EAAEA;IACX,CAAC;IACD,MAAMqB,UAAU,GAAI,GAAEpB,OAAQ,GAAEE,GAAI,IAAGmB,EAAG,EAAC;IAC3C,OAAOlB,KAAK,CAACiB,UAAU,EAAEN,cAAc,CAAC,CACrCV,IAAI,CAAEC,QAAQ,IAAKC,OAAO,CAACC,OAAO,CAACF,QAAQ,CAAC,CAAC,CAC7CI,KAAK,CAAEC,KAAK,IAAKJ,OAAO,CAACK,MAAM,CAACD,KAAK,CAAC,CAAC;EAC5C,CAAC;EAEDa,MAAM,CAACrB,GAAG,EAAEiB,IAAI,EAAE;IAChB,MAAML,cAAc,GAAG;MACrBC,MAAM,EAAE,MAAM;MACdhB,OAAO,EAAE;QACP,WAAW,EAAED;MACf,CAAC;MACDe,IAAI,EAAEM,IAAI,CAACN;IACb,CAAC;IACD,MAAMO,UAAU,GAAI,GAAEpB,OAAQ,GAAEE,GAAI,IAAGiB,IAAI,CAACE,EAAG,SAAQ;IACvD,OAAOlB,KAAK,CAACiB,UAAU,EAAEN,cAAc,CAAC,CACrCV,IAAI,CAAEC,QAAQ,IAAKC,OAAO,CAACC,OAAO,CAACF,QAAQ,CAAC,CAAC,CAC7CI,KAAK,CAAEC,KAAK,IAAKJ,OAAO,CAACK,MAAM,CAACD,KAAK,CAAC,CAAC;EAC5C;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}