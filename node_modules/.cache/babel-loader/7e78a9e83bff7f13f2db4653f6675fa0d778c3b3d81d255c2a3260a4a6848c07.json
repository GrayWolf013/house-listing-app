{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from \"vuex\";\nimport Api from \"@/api/client\";\nArray.prototype.sortBy = function (p) {\n  return this.slice(0).sort(function (a, b) {\n    return a[p] > b[p] ? 1 : a[p] < b[p] ? -1 : 0;\n  });\n};\nexport default createStore({\n  state: {\n    houses: []\n  },\n  getters: {\n    search: state => searchText => {\n      // check if value is event caused by clear x in input\n      if (searchText.target) return state.houses;\n      const filteredByStreet = state.houses.filter(house => house.location.street.toLowerCase().includes(searchText.toLowerCase()));\n      const filteredByPrice = state.houses.filter(house => house.location.price.toLowerCase().includes(searchText.toLowerCase()));\n      const filteredByZip = state.houses.filter(house => house.location.zip.toLowerCase().includes(searchText.toLowerCase()));\n      return state.houses.filter(house => house.location.street.toLowerCase().includes(searchText.toLowerCase()));\n    },\n    sortBy: state => byPrice => {\n      if (state.houses) {\n        if (byPrice) {\n          return state.houses.sortBy(\"price\");\n        }\n        return state.houses.sortBy(\"size\");\n      }\n      return [];\n    },\n    getById: state => id => {\n      return state.houses.filter(house => house.id.toString() == id)[0] ?? null;\n    },\n    removeElement: state => id => {\n      return state.houses.filter(house => house.id.toString() != id);\n    },\n    getByIdEditModel: (state, getters) => id => {\n      var house = {\n        streetName: \"\",\n        houseNumber: null,\n        numberAddition: null,\n        zip: \"\",\n        city: \"\",\n        price: null,\n        size: null,\n        hasGarage: false,\n        bedrooms: null,\n        bathrooms: null,\n        constructionYear: null,\n        description: \"\"\n      };\n      if (id) {\n        const model = getters.getById(id);\n        if (model) {\n          house.streetName = model.location.street;\n          house.image = model.image;\n          house.zip = model.location.zip;\n          house.city = model.location.city;\n          house.price = model.price;\n          house.size = model.size;\n          house.hasGarage = model.hasGarage;\n          house.bedrooms = model.rooms.bedrooms;\n          house.bathrooms = model.rooms.bathrooms;\n          house.constructionYear = model.constructionYear;\n          house.description = model.description;\n        }\n      }\n      return house;\n    }\n  },\n  mutations: {\n    /**\n     * Updates a specific property in the store\n     * @param {object} state The store's state\n     * @param {object} data An object containing the property and value\n     */\n    updateProperty: (state, data) => {\n      state[data.property] = data.value;\n    },\n    /**\n     * Append a specific property in the store\n     * @param {object} state The store's state\n     * @param {object} data An object containing the property and value\n     */\n    appendProperty: (state, data) => {\n      state[data.property].push(data.value);\n    },\n    /**\n     * Edit a specific property in an array in the store\n     * @param {object} state The store's state\n     * @param {object} data An object containing the array, id, property and value\n     */\n    editProperty: (state, data) => {\n      state[data.array].forEach(element => {\n        if (element.id.toString() == data.id) element[data.property] = data.value;\n      });\n    }\n  },\n  actions: {\n    getHouses: context => {\n      Api.get(\"/houses\").then(data => context.commit(\"updateProperty\", {\n        property: \"houses\",\n        value: data\n      })).catch(error => console.error(error));\n    },\n    createHouse({\n      commit\n    }, body) {\n      return new Promise((resolve, reject) => {\n        Api.post(\"/houses\", body).then(data => {\n          commit(\"appendProperty\", {\n            property: \"houses\",\n            value: data\n          });\n          resolve(data);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n    editHouse(context, data) {\n      Api.edit(\"/houses\", data).catch(error => console.error(error));\n    },\n    uploadHouseImg({\n      commit\n    }, data) {\n      Api.upload(\"/houses\", data).then(() => commit(\"editProperty\", {\n        array: \"houses\",\n        id: data.id,\n        property: \"image\",\n        value: data.value\n      })).catch(error => console.error(error));\n    },\n    deleteHouse({\n      commit,\n      getters\n    }, id) {\n      Api.delete(\"/houses\", id).then(() => commit(\"updateProperty\", {\n        property: \"houses\",\n        value: getters.removeElement(id)\n      })).catch(error => console.error(error));\n    }\n  }\n});","map":{"version":3,"names":["createStore","Api","Array","prototype","sortBy","p","slice","sort","a","b","state","houses","getters","search","searchText","target","filteredByStreet","filter","house","location","street","toLowerCase","includes","filteredByPrice","price","filteredByZip","zip","byPrice","getById","id","toString","removeElement","getByIdEditModel","streetName","houseNumber","numberAddition","city","size","hasGarage","bedrooms","bathrooms","constructionYear","description","model","image","rooms","mutations","updateProperty","data","property","value","appendProperty","push","editProperty","array","forEach","element","actions","getHouses","context","get","then","commit","catch","error","console","createHouse","body","Promise","resolve","reject","post","editHouse","edit","uploadHouseImg","upload","deleteHouse","delete"],"sources":["/Users/frostmoon/Documents/DTT projects/Vue js/house-listing-app/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\nimport Api from \"@/api/client\";\n\nArray.prototype.sortBy = function (p) {\n  return this.slice(0).sort(function (a, b) {\n    return a[p] > b[p] ? 1 : a[p] < b[p] ? -1 : 0;\n  });\n};\n\nexport default createStore({\n  state: {\n    houses: [],\n  },\n\n  getters: {\n    search: (state) => (searchText) => {\n      // check if value is event caused by clear x in input\n      if (searchText.target) return state.houses;\n\n      const filteredByStreet = state.houses.filter((house) =>\n        house.location.street.toLowerCase().includes(searchText.toLowerCase())\n      );\n      const filteredByPrice = state.houses.filter((house) =>\n      house.location.price.toLowerCase().includes(searchText.toLowerCase())\n    );\n    const filteredByZip = state.houses.filter((house) =>\n    house.location.zip.toLowerCase().includes(searchText.toLowerCase())\n  );\n      return state.houses.filter((house) =>\n        house.location.street.toLowerCase().includes(searchText.toLowerCase())\n      );\n    },\n    sortBy: (state) => (byPrice) => {\n      if (state.houses) {\n        if (byPrice) {\n          return state.houses.sortBy(\"price\");\n        }\n        return state.houses.sortBy(\"size\");\n      }\n      return [];\n    },\n    getById: (state) => (id) => {\n      return (\n        state.houses.filter((house) => house.id.toString() == id)[0] ?? null\n      );\n    },\n    removeElement: (state) => (id) => {\n      return state.houses.filter((house) => house.id.toString() != id);\n    },\n\n    getByIdEditModel: (state, getters) => (id) => {\n      var house = {\n        streetName: \"\",\n        houseNumber: null,\n        numberAddition: null,\n        zip: \"\",\n        city: \"\",\n        price: null,\n        size: null,\n        hasGarage: false,\n        bedrooms: null,\n        bathrooms: null,\n        constructionYear: null,\n        description: \"\",\n      };\n      if (id) {\n        const model = getters.getById(id);\n        if (model) {\n          house.streetName = model.location.street;\n          house.image = model.image;\n          house.zip = model.location.zip;\n          house.city = model.location.city;\n          house.price = model.price;\n          house.size = model.size;\n          house.hasGarage = model.hasGarage;\n          house.bedrooms = model.rooms.bedrooms;\n          house.bathrooms = model.rooms.bathrooms;\n          house.constructionYear = model.constructionYear;\n          house.description = model.description;\n        }\n      }\n\n      return house;\n    },\n  },\n  mutations: {\n    /**\n     * Updates a specific property in the store\n     * @param {object} state The store's state\n     * @param {object} data An object containing the property and value\n     */\n    updateProperty: (state, data) => {\n      state[data.property] = data.value;\n    },\n    /**\n     * Append a specific property in the store\n     * @param {object} state The store's state\n     * @param {object} data An object containing the property and value\n     */\n    appendProperty: (state, data) => {\n      state[data.property].push(data.value);\n    },\n\n    /**\n     * Edit a specific property in an array in the store\n     * @param {object} state The store's state\n     * @param {object} data An object containing the array, id, property and value\n     */\n    editProperty: (state, data) => {\n      state[data.array].forEach((element) => {\n        if (element.id.toString() == data.id)\n          element[data.property] = data.value;\n      });\n    },\n  },\n\n  actions: {\n    getHouses: (context) => {\n      Api.get(\"/houses\")\n        .then((data) =>\n          context.commit(\"updateProperty\", { property: \"houses\", value: data })\n        )\n        .catch((error) => console.error(error));\n    },\n\n    createHouse({ commit }, body) {\n      return new Promise((resolve, reject) => {\n        Api.post(\"/houses\", body)\n          .then((data) => {\n            commit(\"appendProperty\", { property: \"houses\", value: data });\n            resolve(data);\n          })\n          .catch((error) => {\n            reject(error);\n          });\n      });\n    },\n\n    editHouse(context, data) {\n      Api.edit(\"/houses\", data).catch((error) => console.error(error));\n    },\n\n    uploadHouseImg({ commit }, data) {\n      Api.upload(\"/houses\", data)\n        .then(() =>\n          commit(\"editProperty\", {\n            array: \"houses\",\n            id: data.id,\n            property: \"image\",\n            value: data.value,\n          })\n        )\n        .catch((error) => console.error(error));\n    },\n\n    deleteHouse({ commit, getters }, id) {\n      Api.delete(\"/houses\", id)\n        .then(() =>\n          commit(\"updateProperty\", {\n            property: \"houses\",\n            value: getters.removeElement(id),\n          })\n        )\n        .catch((error) => console.error(error));\n    },\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}