{"ast":null,"code":"import { reactive, toRefs, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport UploadImageComponent from \"./UploadImageComponent.vue\";\nexport default {\n  name: \"HouseListingForm\",\n  props: {\n    houseId: {\n      type: null,\n      required: true\n    }\n  },\n  setup(props, context) {\n    const store = useStore();\n    const state = reactive({\n      buttonClicked: false,\n      errorMessage: \"no msg\"\n    });\n    const house = computed(() => {\n      if (props && props.houseId) {\n        return store.getters.getByIdEditModel(props.houseId);\n      }\n      return {};\n    });\n    function selectImage(data) {\n      context.emit(\"selectImage\", {\n        image: data.image,\n        previewImage: data.previewImage\n      });\n    }\n    function formInvalid() {\n      // Check if any required fields are empty\n      if (!house.value.streetName || !house.value.houseNumber || !house.value.zip || !house.value.city || !house.value.price || !house.value.size || !house.value.bedrooms || !house.value.bathrooms || !house.value.constructionYear || !house.value.description) {\n        state.errorMessage = \"Please fill out all required fields.\";\n        return true;\n      }\n\n      // Check if any fields have invalid types\n      if (isNaN(house.value.houseNumber) || isNaN(house.value.price) || isNaN(house.value.size) || isNaN(house.value.bedrooms) || isNaN(house.value.bathrooms) || isNaN(house.value.constructionYear) || house.value.hasGarage) {\n        state.errorMessage = \"Please enter valid numbers for numeric fields.\";\n        return true;\n      }\n      return false;\n    }\n    function submitButtonClicked() {\n      // state.buttonClicked = true;\n      if (!formInvalid()) context.emit(\"submitForm\", house.value);\n    }\n    function submitForm() {\n      console.log('formInvalid');\n      console.log(formInvalid());\n      console.log('formInvalid');\n    }\n    return {\n      ...toRefs(state),\n      house,\n      selectImage,\n      submitButtonClicked,\n      submitForm\n    };\n  },\n  components: {\n    UploadImageComponent\n  }\n};","map":{"version":3,"mappings":"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","names":["reactive","toRefs","computed","useStore","UploadImageComponent","name","props","houseId","type","required","setup","context","store","state","buttonClicked","errorMessage","house","getters","getByIdEditModel","selectImage","data","emit","image","previewImage","formInvalid","value","streetName","houseNumber","zip","city","price","size","bedrooms","bathrooms","constructionYear","description","isNaN","hasGarage","submitButtonClicked","submitForm","console","log","components"],"sourceRoot":"","sources":["/Users/frostmoon/Documents/DTT projects/Vue js/house-listing-app/src/components/HouseListingFormComponent.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"submitForm\">\n    <div class=\"input-field-title\">Street name*</div>\n    <input\n      type=\"text\"\n      placeholder=\"Enter the street name\"\n      v-model=\"house.streetName\"\n      :class=\"{ error: !house.streetName && buttonClicked }\"\n    />\n    <div class=\"flex\">\n      <div>\n        <div class=\"input-field-title\">House number*</div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter the house number\"\n          v-model=\"house.houseNumber\"\n          :class=\"{ error: !house.houseNumber && buttonClicked }\"\n        />\n      </div>\n      <div class=\"spacer\" />\n      <div>\n        <div class=\"input-field-title\">Addition (optional)</div>\n        <input\n          type=\"text\"\n          placeholder=\"e.g. A\"\n          v-model=\"house.numberAddition\"\n        />\n      </div>\n    </div>\n    <div class=\"input-field-title\">Postal Code*</div>\n    <input\n      type=\"text\"\n      placeholder=\"e.g. 1000 AA\"\n      v-model=\"house.zip\"\n      :class=\"{ error: !house.zip && buttonClicked }\"\n    />\n    <div class=\"input-field-title\">City*</div>\n    <input\n      type=\"text\"\n      placeholder=\"e.g. Utrecht\"\n      v-model=\"house.city\"\n      :class=\"{ error: !house.city && buttonClicked }\"\n    />\n    <div class=\"input-field-title\">Upload picture (PNG or JPG)*</div>\n    <UploadImageComponent\n      :houseImage=\"house.image\"\n      @selectImage=\"selectImage\"\n    />\n\n    <div class=\"input-field-title\">Price*</div>\n    <input\n      type=\"text\"\n      placeholder=\"e.g. €150.000\"\n      v-model=\"house.price\"\n      :class=\"{ error: !house.price && buttonClicked }\"\n    />\n    <div class=\"flex\">\n      <div>\n        <div class=\"input-field-title\">Size*</div>\n        <input\n          type=\"text\"\n          placeholder=\"e.g. 60m²\"\n          v-model=\"house.size\"\n          :class=\"{ error: !house.size && buttonClicked }\"\n        />\n      </div>\n      <div class=\"spacer\" />\n      <div>\n        <div class=\"input-field-title\">Garage*</div>\n        <select\n          v-model=\"house.hasGarage\"\n          :class=\"{ error: !house.hasGarage && buttonClicked }\"\n        >\n          <option disabled value=\"\">Please select an option</option>\n          <option value=\"false\">no</option>\n          <option value=\"true\">yes</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"flex\">\n      <div>\n        <div class=\"input-field-title\">Bedrooms*</div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter amount\"\n          v-model=\"house.bedrooms\"\n          :class=\"{ error: !house.bedrooms && buttonClicked }\"\n        />\n      </div>\n      <div class=\"spacer\" />\n      <div>\n        <div class=\"input-field-title\">Bathrooms*</div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter amount\"\n          v-model=\"house.bathrooms\"\n          :class=\"{ error: !house.bathrooms && buttonClicked }\"\n        />\n      </div>\n    </div>\n    <div class=\"input-field-title\">Construction date*</div>\n    <input\n      type=\"text\"\n      placeholder=\"e.g. 1900\"\n      v-model=\"house.constructionYear\"\n      :class=\"{ error: !house.constructionYear && buttonClicked }\"\n    />\n    <div class=\"input-field-title\">Description*</div>\n    <textarea\n      cols=\"30\"\n      rows=\"10\"\n      placeholder=\"Enter description\"\n      v-model=\"house.description\"\n      :class=\"{ error: !house.description && buttonClicked }\"\n    />\n    <div class=\"error\">\n      {{ errorMessage }}\n    </div>\n    <div class=\"btn-container\">\n      <button class=\"btn\" @click=\"submitButtonClicked\">POST</button>\n    </div>\n  </form>\n</template>\n\n<script>\nimport { reactive, toRefs, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport UploadImageComponent from \"./UploadImageComponent.vue\";\n\nexport default {\n  name: \"HouseListingForm\",\n  props: {\n    houseId: {\n      type: null,\n      required: true,\n    },\n  },\n  setup(props, context) {\n    const store = useStore();\n    const state = reactive({\n      buttonClicked: false,\n      errorMessage: \"no msg\",\n    });\n\n    const house = computed(() => {\n      if (props && props.houseId) {\n        return store.getters.getByIdEditModel(props.houseId);\n      }\n      return {};\n    });\n\n    function selectImage(data) {\n      context.emit(\"selectImage\", {\n        image: data.image,\n        previewImage: data.previewImage,\n      });\n    }\n\n    function formInvalid() {\n      // Check if any required fields are empty\n      if (\n        !house.value.streetName ||\n        !house.value.houseNumber ||\n        !house.value.zip ||\n        !house.value.city ||\n        !house.value.price ||\n        !house.value.size ||\n        !house.value.bedrooms ||\n        !house.value.bathrooms ||\n        !house.value.constructionYear ||\n        !house.value.description\n      ) {\n        state.errorMessage = \"Please fill out all required fields.\";\n        return true;\n      }\n\n      // Check if any fields have invalid types\n      if (\n        isNaN(house.value.houseNumber) ||\n        isNaN(house.value.price) ||\n        isNaN(house.value.size) ||\n        isNaN(house.value.bedrooms) ||\n        isNaN(house.value.bathrooms) ||\n        isNaN(house.value.constructionYear) ||\n        (house.value.hasGarage)\n\n      ) {\n        state.errorMessage = \"Please enter valid numbers for numeric fields.\";\n        return true;\n      }\n\n      return false;\n    }\n\n    function submitButtonClicked() {\n      // state.buttonClicked = true;\n      if (!formInvalid()) context.emit(\"submitForm\", house.value);\n\n    }\n\n    function submitForm() {\n      console.log('formInvalid')\n      console.log(formInvalid())\n      console.log('formInvalid')\n\n    }\n\n    return {\n      ...toRefs(state),\n      house,\n\n      selectImage,\n      submitButtonClicked,\n      submitForm,\n    };\n  },\n  components: { UploadImageComponent },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.flex {\n  display: flex;\n}\n.input-field-title {\n  margin: 10px 0;\n}\n.spacer {\n  width: 20px;\n}\n.btn-container {\n  margin: 50px 275px;\n}\n.error {\n  border: 1px solid red;\n  &::placeholder {\n    color: red;\n    opacity: 1; /* Firefox */\n  }\n\n  &:-ms-input-placeholder {\n    /* Internet Explorer 10-11 */\n    color: red;\n  }\n\n  &::-ms-input-placeholder {\n    /* Microsoft Edge */\n    color: red;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}