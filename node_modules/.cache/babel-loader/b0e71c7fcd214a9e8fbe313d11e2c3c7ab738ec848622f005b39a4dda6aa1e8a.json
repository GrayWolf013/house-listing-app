{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/ic_upload@3x.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-713750f3\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"uploading-image-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"×\", -1 /* HOISTED */));\nconst _hoisted_3 = [_hoisted_2];\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  key: 1,\n  class: \"uploading-image-container\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"×\", -1 /* HOISTED */));\nconst _hoisted_7 = [_hoisted_6];\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = {\n  key: 2,\n  src: _imports_0,\n  class: \"uploading-image\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_ctx.previewImage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.removeImage && $setup.removeImage(...args)),\n    class: \"close\"\n  }, _hoisted_3), _createElementVNode(\"img\", {\n    alt: \"upload\",\n    src: _ctx.previewImage\n  }, null, 8 /* PROPS */, _hoisted_4)])) : $props.houseImage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.removeImage && $setup.removeImage(...args)),\n    class: \"close\"\n  }, _hoisted_7), _createElementVNode(\"img\", {\n    alt: \"upload\",\n    src: $props.houseImage\n  }, null, 8 /* PROPS */, _hoisted_8)])) : (_openBlock(), _createElementBlock(\"img\", _hoisted_9)), _createElementVNode(\"input\", {\n    type: \"file\",\n    accept: \"image/jpeg\",\n    onChange: _cache[2] || (_cache[2] = (...args) => $setup.uploadImage && $setup.uploadImage(...args))\n  }, null, 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"mappings":";OAcgBA,UAA+B;;;;EAZlBC,KAAK,EAAC;;gEAE3BC,oBAAoB,cAAd,GAAO;oBAAbC,UAAoB;;;;EAIIF,KAAK,EAAC;;gEAE9BC,oBAAoB,cAAd,GAAO;oBAAbE,UAAoB;;;;EAIZC,GAA+B,EAA/BL,UAA+B;EAACC,KAAK,EAAC;;;uBAbpDK,oBAeM,cAdOC,iBAAY,kBAAvBD,oBAKM,OALNE,UAKM,GAJJN,oBAES;IAFAO,OAAK,yCAAEC,iDAAW;IAAET,KAAK,EAAC;kBAGnCC,oBAAwC;IAAnCS,GAAG,EAAC,QAAQ;IAAEN,GAAG,EAAEE;2CAEVK,iBAAU,kBAA1BN,oBAKM,OALNO,UAKM,GAJJX,oBAES;IAFAO,OAAK,yCAAEC,iDAAW;IAAET,KAAK,EAAC;kBAGnCC,oBAAsC;IAAjCS,GAAG,EAAC,QAAQ;IAAEN,GAAG,EAAEO;0DAE1BN,oBAAsE,OAAtEQ,UAAsE,IACtEZ,oBAA+D;IAAxDa,IAAI,EAAC,MAAM;IAACC,MAAM,EAAC,YAAY;IAAEC,QAAM,yCAAEP,iDAAW","names":["_imports_0","class","_createElementVNode","_hoisted_2","_hoisted_6","src","_createElementBlock","_ctx","_hoisted_1","onClick","$setup","alt","$props","_hoisted_5","_hoisted_9","type","accept","onChange"],"sourceRoot":"","sources":["/Users/frostmoon/Documents/DTT projects/Vue js/house-listing-app/src/components/UploadImageComponent.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-if=\"previewImage\" class=\"uploading-image-container\">\n      <button @click=\"removeImage\" class=\"close\">\n        <span>&times;</span>\n      </button>\n      <img alt=\"upload\" :src=\"previewImage\" />\n    </div>\n    <div v-else-if=\"houseImage\" class=\"uploading-image-container\">\n      <button @click=\"removeImage\" class=\"close\">\n        <span>&times;</span>\n      </button>\n      <img alt=\"upload\" :src=\"houseImage\" />\n    </div>\n    <img v-else src=\"@/assets/ic_upload@3x.png\" class=\"uploading-image\" />\n    <input type=\"file\" accept=\"image/jpeg\" @change=\"uploadImage\" />\n  </div>\n</template>\n\n<script>\nimport { reactive, toRefs } from \"vue\";\n\nexport default {\n  props: {\n    houseImage: {\n      type: String,\n      required: false,\n    },\n  },\n  setup(props, context) {\n    const state = reactive({\n      previewImage: null,\n    });\n\n    function uploadImage(e) {\n      const image = e.target.files[0];\n      const reader = new FileReader();\n      reader.readAsDataURL(image);\n      reader.onload = (e) => {\n        state.previewImage = e.target.result;\n        context.emit(\"selectImage\", {\n          image: image,\n          previewImage: state.previewImage,\n        });\n      };\n    }\n\n    function removeImage() {\n      state.previewImage = null;\n      context.emit(\"selectImage\", {\n        image: null,\n        previewImage: null,\n      });\n    }\n    return {\n      ...toRefs(state),\n      uploadImage,\n      removeImage,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.uploading-image-container {\n  position: relative;\n  width: 100px;\n  height: 100px;\n  img {\n    width: 100%;\n    height: 100%;\n    border-radius: 5px;\n  }\n  .close {\n    top: -5px;\n    right: -10px;\n    position: absolute;\n    border: none;\n    border-radius: 20px;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}