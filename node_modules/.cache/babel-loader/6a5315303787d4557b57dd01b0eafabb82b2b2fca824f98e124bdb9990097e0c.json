{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <div class=\\\"home\\\">\\n    <HouseContent\\n      v-if=\\\"houses\\\"\\n      :housesprop=\\\"houses\\\"\\n      @search=\\\"search\\\"\\n      @sortBy=\\\"sortBy\\\"\\n    />\\n  </div> \"), _createVNode(_component_router_view)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;6DACEA,2LAOU,EACVC,aAAeC","names":["_createCommentVNode","_createVNode","_component_router_view"],"sourceRoot":"","sources":["/Users/frostmoon/Documents/DTT projects/Vue js/house-listing-app/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <!-- <div class=\"home\">\n    <HouseContent\n      v-if=\"houses\"\n      :housesprop=\"houses\"\n      @search=\"search\"\n      @sortBy=\"sortBy\"\n    />\n  </div> -->\n  <router-view />\n\n</template>\n\n<script>\nimport { reactive, toRefs, onMounted, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport HouseContent from \"@/components/HouseContentComponent.vue\";\n\nexport default {\n  name: \"HomeView\",\n  setup() {\n    const state = reactive({\n      searchText: \"\",\n      sortByPrice: true,\n    });\n\n    const store = useStore();\n\n    function search(searchText) {\n      state.searchText = searchText;\n    }\n\n    function sortBy(price) {\n      state.sortByPrice = price;\n    }\n\n    const houses = computed(() => {\n      if (state.searchText) {\n        return store.getters.search(state.searchText);\n      }\n      return store.getters.sortBy(state.sortByPrice);\n    });\n\n    onMounted(async () => {\n      store\n        .dispatch(\"getHouses\")\n        .then(() => {\n          // API success\n          console.log(\"data fetched\");\n        })\n        .catch(() => {\n          // API fail\n          console.log(\"error in request\");\n        });\n    });\n\n    return {\n      ...toRefs(state),\n      houses,\n      search,\n      sortBy,\n    };\n  },\n  components: {\n    // HouseContent,\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}