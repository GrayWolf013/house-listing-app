{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HouseContent = _resolveComponent(\"HouseContent\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.houses ? (_openBlock(), _createBlock(_component_HouseContent, {\n    key: 0,\n    housesprop: $setup.houses,\n    onSearch: $setup.search,\n    onSortBy: $setup.sortBy\n  }, null, 8 /* PROPS */, [\"housesprop\", \"onSearch\", \"onSortBy\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAM;;;uBAAjBC,oBAEM,OAFNC,UAEM,GADgBC,aAAM,kBAA1BC,aAAoFC;;IAAvDC,UAAU,EAAEH,aAAM;IAAGI,QAAM,EAAEJ,aAAM;IAAGK,QAAM,EAAEL","names":["class","_createElementBlock","_hoisted_1","$setup","_createBlock","_component_HouseContent","housesprop","onSearch","onSortBy"],"sourceRoot":"","sources":["/Users/frostmoon/Documents/DTT projects/Vue js/house-listing-app/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <HouseContent v-if=\"houses\" :housesprop=\"houses\" @search=\"search\" @sortBy=\"sortBy\"/>\n  </div>\n</template>\n\n<script>\nimport { reactive, toRefs, onMounted, computed } from \"vue\"\nimport { useStore } from \"vuex\"\nimport HouseContent from \"@/components/HouseContentComponent.vue\"\n\nexport default {\n  name: \"HomeView\",\n  setup() {\n    const state = reactive({\n      searchText: \"\",\n      sortByPrice: true\n    })\n\n    const store = useStore()\n\n    function search(searchText) {\n      state.searchText = searchText\n    }\n\n    function sortBy(price) {\n      state.sortByPrice = price\n    }\n\n    const houses = computed(() => {\n      if (state.searchText) {\n        return store.getters.search(state.searchText) \n      }\n      return store.getters.sortBy(state.sortByPrice) \n    });\n\n    onMounted(async () => {\n      store\n        .dispatch(\"getHouses\")\n        .then(() => {\n          // API success\n          console.log(\"data fetched\");\n        })\n        .catch(() => {\n          // API fail\n          console.log(\"error in request\");\n        });\n    });\n\n    return {\n      ...toRefs(state),\n      houses,\n      search,\n      sortBy\n    };\n  },\n  components: {\n    HouseContent,\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}