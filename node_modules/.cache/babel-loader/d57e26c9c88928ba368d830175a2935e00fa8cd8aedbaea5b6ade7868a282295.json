{"ast":null,"code":"// import { createStore } from 'vuex'\n// import state from './state'\n// import * as actions from './actions'\n// import * as mutations from './mutations'\n// import * as getters from './getters'\n\n// const store = createStore({\n//   state,\n//   actions,\n//   mutations,\n//   getters,\n// })\n\n// export default store\n\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport Api from './api';\nVue.use(Vuex);\n\n// eslint-disable-next-line\nexport const store = new Vuex.Store({\n  state: {\n    apiBaseUrl: 'https://api.intern.d-tt.nl/api',\n    authenticatedUser: null\n  },\n  mutations: {\n    /**\n     * Updates a specific property in the store\n     * @param {object} state The store's state\n     * @param {object} data An object containing the property and value\n     */\n    updateProperty: (state, data) => {\n      state[data.property] = data.value;\n    }\n  },\n  actions: {\n    usersCreate: (context, data) => {\n      Api.post('/users', data).then(response => context.commit('updateProperty', {\n        property: 'authenticatedUser',\n        value: response.body\n      }))\n      // eslint-disable-next-line\n      .catch(error => console.error(error));\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","Api","use","store","Store","state","apiBaseUrl","authenticatedUser","mutations","updateProperty","data","property","value","actions","usersCreate","context","post","then","response","commit","body","catch","error","console"],"sources":["/Users/frostmoon/Documents/DTT projects/Vue js/front-end-assessment/src/store/index.js"],"sourcesContent":["// import { createStore } from 'vuex'\n// import state from './state'\n// import * as actions from './actions'\n// import * as mutations from './mutations'\n// import * as getters from './getters'\n\n// const store = createStore({\n//   state,\n//   actions,\n//   mutations,\n//   getters,\n// })\n\n// export default store\n\n\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport Api from './api';\n\nVue.use(Vuex);\n\n// eslint-disable-next-line\nexport const store = new Vuex.Store({\n  state: {\n    apiBaseUrl: 'https://api.intern.d-tt.nl/api',\n    authenticatedUser: null,\n  },\n\n  mutations: {\n    /**\n     * Updates a specific property in the store\n     * @param {object} state The store's state\n     * @param {object} data An object containing the property and value\n     */\n    updateProperty: (state, data) => {\n      state[data.property] = data.value;\n    },\n  },\n\n  actions: {\n    usersCreate: (context, data) => {\n      Api.post('/users', data)\n        .then(response => context.commit('updateProperty', { property: 'authenticatedUser', value: response.body }))\n        // eslint-disable-next-line\n        .catch(error => console.error(error));\n    },\n  },\n});"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,GAAG,MAAM,OAAO;AAEvBF,GAAG,CAACG,GAAG,CAACF,IAAI,CAAC;;AAEb;AACA,OAAO,MAAMG,KAAK,GAAG,IAAIH,IAAI,CAACI,KAAK,CAAC;EAClCC,KAAK,EAAE;IACLC,UAAU,EAAE,gCAAgC;IAC5CC,iBAAiB,EAAE;EACrB,CAAC;EAEDC,SAAS,EAAE;IACT;AACJ;AACA;AACA;AACA;IACIC,cAAc,EAAE,CAACJ,KAAK,EAAEK,IAAI,KAAK;MAC/BL,KAAK,CAACK,IAAI,CAACC,QAAQ,CAAC,GAAGD,IAAI,CAACE,KAAK;IACnC;EACF,CAAC;EAEDC,OAAO,EAAE;IACPC,WAAW,EAAE,CAACC,OAAO,EAAEL,IAAI,KAAK;MAC9BT,GAAG,CAACe,IAAI,CAAC,QAAQ,EAAEN,IAAI,CAAC,CACrBO,IAAI,CAACC,QAAQ,IAAIH,OAAO,CAACI,MAAM,CAAC,gBAAgB,EAAE;QAAER,QAAQ,EAAE,mBAAmB;QAAEC,KAAK,EAAEM,QAAQ,CAACE;MAAK,CAAC,CAAC;MAC3G;MAAA,CACCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;IACzC;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}