{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from \"vuex\";\nimport Api from \"@/api/client\";\nArray.prototype.sortBy = function (p) {\n  return this.slice(0).sort(function (a, b) {\n    return a[p] > b[p] ? 1 : a[p] < b[p] ? -1 : 0;\n  });\n};\nexport default createStore({\n  state: {\n    houses: []\n  },\n  getters: {\n    search: state => searchText => {\n      // check if value is event caused by clear x in input\n      if (searchText.target) return state.houses;\n      return state.houses.filter(house => house.location.street.toLowerCase().includes(searchText.toLowerCase()));\n    },\n    sortBy: state => byPrice => {\n      if (state.houses) {\n        if (byPrice) {\n          return state.houses.sortBy(\"price\");\n        }\n        return state.houses.sortBy(\"size\");\n      }\n      return [];\n    },\n    getById: state => id => {\n      return state.houses.filter(house => house.id.toString() == id)[0];\n    },\n    removeElement: state => id => {\n      return state.houses.filter(house => house.id.toString() != id);\n    },\n    getByIdEditModel: getters => id => {\n      const model = getters.getById(id);\n      const house = {\n        id: model.id,\n        streetName: model.location.street,\n        houseNumber: null,\n        numberAddition: null,\n        zip: model.location.zip,\n        city: model.location.city,\n        price: model.price,\n        size: model.size,\n        hasGarage: model.hasGarage,\n        bedrooms: model.rooms.bedrooms,\n        bathrooms: model.rooms.bathrooms,\n        constructionYear: model.constructionYear,\n        description: model.description\n      };\n      return house;\n    }\n  },\n  mutations: {\n    /**\n     * Updates a specific property in the store\n     * @param {object} state The store's state\n     * @param {object} data An object containing the property and value\n     */\n    updateProperty: (state, data) => {\n      state[data.property] = data.value;\n    },\n    /**\n     * Append a specific property in the store\n     * @param {object} state The store's state\n     * @param {object} data An object containing the property and value\n     */\n    appendProperty: (state, data) => {\n      state[data.property].push(data.value);\n    }\n  },\n  actions: {\n    getHouses: context => {\n      Api.get(\"/houses\").then(data => context.commit(\"updateProperty\", {\n        property: \"houses\",\n        value: data\n      })).catch(error => console.error(error));\n    },\n    createHouse({\n      commit\n    }, body) {\n      Api.post(\"/houses\", body).then(data => commit(\"appendProperty\", {\n        property: \"houses\",\n        value: data\n      })).catch(error => console.error(error));\n    },\n    deleteHouse({\n      commit,\n      getters\n    }, id) {\n      Api.delete(\"/houses\", id).then(() => commit(\"updateProperty\", {\n        property: \"houses\",\n        value: getters.removeElement(id)\n      })).catch(error => console.error(error));\n    }\n  }\n});","map":{"version":3,"names":["createStore","Api","Array","prototype","sortBy","p","slice","sort","a","b","state","houses","getters","search","searchText","target","filter","house","location","street","toLowerCase","includes","byPrice","getById","id","toString","removeElement","getByIdEditModel","model","streetName","houseNumber","numberAddition","zip","city","price","size","hasGarage","bedrooms","rooms","bathrooms","constructionYear","description","mutations","updateProperty","data","property","value","appendProperty","push","actions","getHouses","context","get","then","commit","catch","error","console","createHouse","body","post","deleteHouse","delete"],"sources":["/Users/frostmoon/Documents/DTT projects/Vue js/house-listing-app/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\nimport Api from \"@/api/client\";\n\nArray.prototype.sortBy = function (p) {\n  return this.slice(0).sort(function (a, b) {\n    return a[p] > b[p] ? 1 : a[p] < b[p] ? -1 : 0;\n  });\n};\n\nexport default createStore({\n  state: {\n    houses: [],\n  },\n\n  getters: {\n    search: (state) => (searchText) => {\n      // check if value is event caused by clear x in input\n      if (searchText.target) return state.houses;\n      return state.houses.filter((house) =>\n        house.location.street.toLowerCase().includes(searchText.toLowerCase())\n      );\n    },\n    sortBy: (state) => (byPrice) => {\n      if (state.houses) {\n        if (byPrice) {\n          return state.houses.sortBy(\"price\");\n        }\n        return state.houses.sortBy(\"size\");\n      }\n      return [];\n    },\n    getById: (state) => (id) => {\n      return state.houses.filter((house) => house.id.toString() == id)[0];\n    },\n    removeElement: (state) => (id) => {\n      return state.houses.filter((house) => house.id.toString() != id);\n    },\n\n    getByIdEditModel: (getters) => (id) => {\n      const model = getters.getById(id);\n      const house = {\n        id: model.id,\n        streetName: model.location.street,\n        houseNumber: null,\n        numberAddition: null,\n        zip: model.location.zip,\n        city: model.location.city,\n        price: model.price,\n        size: model.size,\n        hasGarage: model.hasGarage,\n        bedrooms: model.rooms.bedrooms,\n        bathrooms: model.rooms.bathrooms,\n        constructionYear: model.constructionYear,\n        description: model.description,\n      };\n      return house;\n    },\n  },\n  mutations: {\n    /**\n     * Updates a specific property in the store\n     * @param {object} state The store's state\n     * @param {object} data An object containing the property and value\n     */\n    updateProperty: (state, data) => {\n      state[data.property] = data.value;\n    },\n    /**\n     * Append a specific property in the store\n     * @param {object} state The store's state\n     * @param {object} data An object containing the property and value\n     */\n    appendProperty: (state, data) => {\n      state[data.property].push(data.value);\n    },\n  },\n\n  actions: {\n    getHouses: (context) => {\n      Api.get(\"/houses\")\n        .then((data) =>\n          context.commit(\"updateProperty\", { property: \"houses\", value: data })\n        )\n        .catch((error) => console.error(error));\n    },\n\n    createHouse({ commit }, body) {\n      Api.post(\"/houses\", body)\n        .then((data) =>\n          commit(\"appendProperty\", { property: \"houses\", value: data })\n        )\n        .catch((error) => console.error(error));\n    },\n\n    deleteHouse({ commit, getters }, id) {\n      Api.delete(\"/houses\", id)\n        .then(() =>\n          commit(\"updateProperty\", {\n            property: \"houses\",\n            value: getters.removeElement(id),\n          })\n        )\n        .catch((error) => console.error(error));\n    },\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}