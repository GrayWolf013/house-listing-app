{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from \"vuex\";\nimport Api from \"@/api/client\";\nArray.prototype.sortBy = function (p) {\n  return this.slice(0).sort(function (a, b) {\n    return a[p] > b[p] ? 1 : a[p] < b[p] ? -1 : 0;\n  });\n};\nexport default createStore({\n  state: {\n    houses: []\n  },\n  getters: {\n    search: state => searchText => {\n      // check if value is event caused by clear x in input\n      if (searchText.target) return state.houses;\n      return state.houses.filter(house => house.location.street.toLowerCase().includes(searchText.toLowerCase()));\n    },\n    sortBy: state => byPrice => {\n      if (state.houses) {\n        if (byPrice) {\n          return state.houses.sortBy(\"price\");\n        }\n        return state.houses.sortBy(\"size\");\n      }\n      return [];\n    },\n    getById: state => id => {\n      return state.houses.filter(house => house.id.toString() == id)[0] ?? null;\n    },\n    removeElement: state => id => {\n      return state.houses.filter(house => house.id.toString() != id);\n    },\n    getByIdEditModel: (state, getters) => id => {\n      var house = {\n        streetName: \"\",\n        houseNumber: null,\n        numberAddition: null,\n        zip: \"\",\n        city: \"\",\n        price: null,\n        size: null,\n        hasGarage: false,\n        bedrooms: null,\n        bathrooms: null,\n        constructionYear: null,\n        description: \"\"\n      };\n      if (id) {\n        const model = getters.getById(id);\n        if (model) {\n          house.streetName = model.location.street;\n          house.image = model.image;\n          house.zip = model.location.zip;\n          house.city = model.location.city;\n          house.price = model.price;\n          house.size = model.size;\n          house.hasGarage = model.hasGarage;\n          house.bedrooms = model.rooms.bedrooms;\n          house.bathrooms = model.rooms.bathrooms;\n          house.constructionYear = model.constructionYear;\n          house.description = model.description;\n        }\n      }\n      return house;\n    }\n  },\n  mutations: {\n    /**\n     * Updates a specific property in the store\n     * @param {object} state The store's state\n     * @param {object} data An object containing the property and value\n     */\n    updateProperty: (state, data) => {\n      state[data.property] = data.value;\n    },\n    /**\n     * Append a specific property in the store\n     * @param {object} state The store's state\n     * @param {object} data An object containing the property and value\n     */\n    appendProperty: (state, data) => {\n      state[data.property].push(data.value);\n    }\n  },\n  actions: {\n    getHouses: context => {\n      Api.get(\"/houses\").then(data => context.commit(\"updateProperty\", {\n        property: \"houses\",\n        value: data\n      })).catch(error => console.error(error));\n    },\n    createHouse({\n      commit\n    }, body) {\n      Api.post(\"/houses\", body).then(data => commit(\"appendProperty\", {\n        property: \"houses\",\n        value: data\n      })).catch(error => console.error(error));\n    },\n    editHouse(context, data) {\n      Api.edit(\"/houses\", data).catch(error => console.error(error));\n    },\n    uploadHouseImg(context, data) {\n      Api.upload(\"/houses\", data).catch(error => console.error(error));\n    },\n    deleteHouse({\n      commit,\n      getters\n    }, id) {\n      Api.delete(\"/houses\", id).then(() => commit(\"updateProperty\", {\n        property: \"houses\",\n        value: getters.removeElement(id)\n      })).catch(error => console.error(error));\n    }\n  }\n});","map":{"version":3,"names":["createStore","Api","Array","prototype","sortBy","p","slice","sort","a","b","state","houses","getters","search","searchText","target","filter","house","location","street","toLowerCase","includes","byPrice","getById","id","toString","removeElement","getByIdEditModel","streetName","houseNumber","numberAddition","zip","city","price","size","hasGarage","bedrooms","bathrooms","constructionYear","description","model","image","rooms","mutations","updateProperty","data","property","value","appendProperty","push","actions","getHouses","context","get","then","commit","catch","error","console","createHouse","body","post","editHouse","edit","uploadHouseImg","upload","deleteHouse","delete"],"sources":["/Users/frostmoon/Documents/DTT projects/Vue js/house-listing-app/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\nimport Api from \"@/api/client\";\n\nArray.prototype.sortBy = function (p) {\n  return this.slice(0).sort(function (a, b) {\n    return a[p] > b[p] ? 1 : a[p] < b[p] ? -1 : 0;\n  });\n};\n\nexport default createStore({\n  state: {\n    houses: [],\n  },\n\n  getters: {\n    search: (state) => (searchText) => {\n      // check if value is event caused by clear x in input\n      if (searchText.target) return state.houses;\n      return state.houses.filter((house) =>\n        house.location.street.toLowerCase().includes(searchText.toLowerCase())\n      );\n    },\n    sortBy: (state) => (byPrice) => {\n      if (state.houses) {\n        if (byPrice) {\n          return state.houses.sortBy(\"price\");\n        }\n        return state.houses.sortBy(\"size\");\n      }\n      return [];\n    },\n    getById: (state) => (id) => {\n      return (\n        state.houses.filter((house) => house.id.toString() == id)[0] ?? null\n      );\n    },\n    removeElement: (state) => (id) => {\n      return state.houses.filter((house) => house.id.toString() != id);\n    },\n\n    getByIdEditModel: (state, getters) => (id) => {\n      var house = {\n        streetName: \"\",\n        houseNumber: null,\n        numberAddition: null,\n        zip: \"\",\n        city: \"\",\n        price: null,\n        size: null,\n        hasGarage: false,\n        bedrooms: null,\n        bathrooms: null,\n        constructionYear: null,\n        description: \"\",\n      };\n      if (id) {\n        const model = getters.getById(id);\n        if (model) {\n          house.streetName = model.location.street;\n          house.image = model.image;\n          house.zip = model.location.zip;\n          house.city = model.location.city;\n          house.price = model.price;\n          house.size = model.size;\n          house.hasGarage = model.hasGarage;\n          house.bedrooms = model.rooms.bedrooms;\n          house.bathrooms = model.rooms.bathrooms;\n          house.constructionYear = model.constructionYear;\n          house.description = model.description;\n        }\n      }\n\n      return house;\n    },\n  },\n  mutations: {\n    /**\n     * Updates a specific property in the store\n     * @param {object} state The store's state\n     * @param {object} data An object containing the property and value\n     */\n    updateProperty: (state, data) => {\n      state[data.property] = data.value;\n    },\n    /**\n     * Append a specific property in the store\n     * @param {object} state The store's state\n     * @param {object} data An object containing the property and value\n     */\n    appendProperty: (state, data) => {\n      state[data.property].push(data.value);\n    },\n  },\n\n  actions: {\n    getHouses: (context) => {\n      Api.get(\"/houses\")\n        .then((data) =>\n          context.commit(\"updateProperty\", { property: \"houses\", value: data })\n        )\n        .catch((error) => console.error(error));\n    },\n\n    createHouse({ commit }, body) {\n      Api.post(\"/houses\", body)\n        .then((data) =>\n          commit(\"appendProperty\", { property: \"houses\", value: data })\n        )\n        .catch((error) => console.error(error));\n    },\n\n    editHouse(context, data) {\n      Api.edit(\"/houses\", data).catch((error) => console.error(error));\n    },\n\n    uploadHouseImg(context, data) {\n      Api.upload(\"/houses\", data).catch((error) => console.error(error));\n    },\n\n    deleteHouse({ commit, getters }, id) {\n      Api.delete(\"/houses\", id)\n        .then(() =>\n          commit(\"updateProperty\", {\n            property: \"houses\",\n            value: getters.removeElement(id),\n          })\n        )\n        .catch((error) => console.error(error));\n    },\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}