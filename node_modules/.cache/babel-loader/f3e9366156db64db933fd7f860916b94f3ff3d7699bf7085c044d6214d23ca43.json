{"ast":null,"code":"import { createStore } from 'vuex';\nimport Api from \"@/api/client\";\nexport default createStore({\n  state: {\n    houses: []\n  },\n  getters: {\n    search: state => searchText => {\n      if (!searchText) {\n        return state.houses;\n      }\n      console.log(\"searchText\");\n      console.log(searchText);\n      console.log(\"searchText\");\n      return state.houses.filter(house => house.location.street.toLowerCase().includes(searchText.toLowerCase()));\n    }\n  },\n  mutations: {\n    /**\n     * Updates a specific property in the store\n     * @param {object} state The store's state\n     * @param {object} data An object containing the property and value\n     */\n    updateProperty: (state, data) => {\n      state[data.property] = data.value;\n    }\n  },\n  actions: {\n    getHouses: context => {\n      Api.get(\"/houses\").then(data => context.commit('updateProperty', {\n        property: 'houses',\n        value: data\n      })).catch(error => console.error(error));\n    }\n  }\n});","map":{"version":3,"names":["createStore","Api","state","houses","getters","search","searchText","console","log","filter","house","location","street","toLowerCase","includes","mutations","updateProperty","data","property","value","actions","getHouses","context","get","then","commit","catch","error"],"sources":["/Users/frostmoon/Documents/DTT projects/Vue js/house-listing-app/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport Api from \"@/api/client\";\n\nexport default createStore({\n  state: {\n    houses: [],\n  },\n  \n  getters: {\n    search: (state) => (searchText) => {\n      if(!searchText) {return state.houses}\n      console.log(\"searchText\")\n      console.log(searchText)\n      console.log(\"searchText\")\n\n      return state.houses.filter(house => house.location.street.toLowerCase().includes(searchText.toLowerCase()))\n    }\n  },\n  mutations: {\n    /**\n     * Updates a specific property in the store\n     * @param {object} state The store's state\n     * @param {object} data An object containing the property and value\n     */\n    updateProperty: (state, data) => {\n      state[data.property] = data.value;\n    },\n  },\n\n  actions: {\n    getHouses: (context) => {\n      Api.get(\"/houses\")\n        .then(data => context.commit('updateProperty', { property: 'houses', value: data }))\n        .catch((error) => console.error(error))\n    },\n  },\n});\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,GAAG,MAAM,cAAc;AAE9B,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE;IACLC,MAAM,EAAE;EACV,CAAC;EAEDC,OAAO,EAAE;IACPC,MAAM,EAAGH,KAAK,IAAMI,UAAU,IAAK;MACjC,IAAG,CAACA,UAAU,EAAE;QAAC,OAAOJ,KAAK,CAACC,MAAM;MAAA;MACpCI,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzBD,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;MACvBC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MAEzB,OAAON,KAAK,CAACC,MAAM,CAACM,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAACC,MAAM,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACR,UAAU,CAACO,WAAW,EAAE,CAAC,CAAC;IAC7G;EACF,CAAC;EACDE,SAAS,EAAE;IACT;AACJ;AACA;AACA;AACA;IACIC,cAAc,EAAE,CAACd,KAAK,EAAEe,IAAI,KAAK;MAC/Bf,KAAK,CAACe,IAAI,CAACC,QAAQ,CAAC,GAAGD,IAAI,CAACE,KAAK;IACnC;EACF,CAAC;EAEDC,OAAO,EAAE;IACPC,SAAS,EAAGC,OAAO,IAAK;MACtBrB,GAAG,CAACsB,GAAG,CAAC,SAAS,CAAC,CACfC,IAAI,CAACP,IAAI,IAAIK,OAAO,CAACG,MAAM,CAAC,gBAAgB,EAAE;QAAEP,QAAQ,EAAE,QAAQ;QAAEC,KAAK,EAAEF;MAAK,CAAC,CAAC,CAAC,CACnFS,KAAK,CAAEC,KAAK,IAAKpB,OAAO,CAACoB,KAAK,CAACA,KAAK,CAAC,CAAC;IAC3C;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}