{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/ic_upload@3x.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-713750f3\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"uploading-image\",\n  style: {\n    \"position\": \"relative\"\n  }\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"close AClass\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", null, \"Ã—\")], -1 /* HOISTED */));\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  key: 2,\n  src: _imports_0,\n  class: \"uploading-image\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_ctx.previewImage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"img\", {\n    alt: \"upload\",\n    src: _ctx.previewImage\n  }, null, 8 /* PROPS */, _hoisted_3)])) : $props.houseImage ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" <img\\n      v-if=\\\"previewImage\\\"\\n      :src=\\\"previewImage\\\"\\n      alt=\\\"upload\\\"\\n      class=\\\"uploading-image\\\"\\n    /> \"), _createElementVNode(\"img\", {\n    src: $props.houseImage,\n    alt: \"upload\",\n    class: \"uploading-image\"\n  }, null, 8 /* PROPS */, _hoisted_4)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"img\", _hoisted_5)), _createElementVNode(\"input\", {\n    type: \"file\",\n    accept: \"image/jpeg\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $setup.uploadImage && $setup.uploadImage(...args))\n  }, null, 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"mappings":";OAoBgBA,UAA+B;;;;EAlBlBC,KAAK,EAAC,iBAAiB;EAACC,KAA0B,EAA1B;IAAA;EAAA;;gEAC/CC,oBAES;EAFDC,IAAI,EAAC,QAAQ;EAACH,KAAK,EAAC;iBAC1BE,oBAAoB,cAAd,GAAO;;;;;EAgBLE,GAA+B,EAA/BL,UAA+B;EAACC,KAAK,EAAC;;;uBAnBpDK,oBAqBM,cApBOC,iBAAY,kBAAvBD,oBAKM,OALNE,UAKM,GAJJC,UAES,EACTN,oBAAwC;IAAnCO,GAAG,EAAC,QAAQ;IAAEL,GAAG,EAAEE;2CASbI,iBAAU,kBADvBL,oBAKEM;IAAAC;EAAA,IAXFC,sJAKM,EACNX,oBAKE;IAHCE,GAAG,EAAEM,iBAAU;IAChBD,GAAG,EAAC,QAAQ;IACZT,KAAK,EAAC;yGAERK,oBAAsE,OAAtES,UAAsE,IACtEZ,oBAA+D;IAAxDC,IAAI,EAAC,MAAM;IAACY,MAAM,EAAC,YAAY;IAAEC,QAAM,yCAAEC,iDAAW","names":["_imports_0","class","style","_createElementVNode","type","src","_createElementBlock","_ctx","_hoisted_1","_hoisted_2","alt","$props","_Fragment","key","_createCommentVNode","_hoisted_5","accept","onChange","$setup"],"sourceRoot":"","sources":["/Users/frostmoon/Documents/DTT projects/Vue js/house-listing-app/src/components/UploadImageComponent.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-if=\"previewImage\" class=\"uploading-image\" style=\"position: relative\">\n      <button type=\"submit\" class=\"close AClass\">\n        <span>&times;</span>\n      </button>\n      <img alt=\"upload\" :src=\"previewImage\" />\n    </div>\n    <!-- <img\n      v-if=\"previewImage\"\n      :src=\"previewImage\"\n      alt=\"upload\"\n      class=\"uploading-image\"\n    /> -->\n    <img\n      v-else-if=\"houseImage\"\n      :src=\"houseImage\"\n      alt=\"upload\"\n      class=\"uploading-image\"\n    />\n    <img v-else src=\"@/assets/ic_upload@3x.png\" class=\"uploading-image\" />\n    <input type=\"file\" accept=\"image/jpeg\" @change=\"uploadImage\" />\n  </div>\n</template>\n\n<script>\nimport { reactive, toRefs } from \"vue\";\n\nexport default {\n  props: {\n    houseImage: {\n      type: String,\n      required: false,\n    },\n  },\n  setup(props, context) {\n    const state = reactive({\n      previewImage: null,\n    });\n\n    function uploadImage(e) {\n      const image = e.target.files[0];\n      const reader = new FileReader();\n      reader.readAsDataURL(image);\n      reader.onload = (e) => {\n        state.previewImage = e.target.result;\n        context.emit(\"selectImage\", {\n          image: image,\n          previewImage: state.previewImage,\n        });\n      };\n    }\n    return {\n      ...toRefs(state),\n      uploadImage,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.uploading-image {\n  width: 100px;\n  height: 100px;\n  border-radius: 5px;\n  img {\n    width: 100%;\n    height: 100%;\n  }\n}\n\n.AClass {\n  right: 0px;\n  position: absolute;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}